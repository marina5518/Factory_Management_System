package project;


//import com.sun.jdi.connect.spi.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author hp
 */
public class Customers extends javax.swing.JFrame {

    private static String username=" ";
    DefaultTableModel dtm;

    /**
     * Creates new form Customers
     */
    Connection connection;
    ArrayList<Integer> cust_id = new ArrayList<>();

    public Customers(String user) {
        initComponents();
        this.setLocationRelativeTo(null);
        username = user;
        dtm = new DefaultTableModel();
        dtm.addColumn("ID");
        dtm.addColumn("First Name");
        dtm.addColumn("Last Name");
        dtm.addColumn("Address");
        dtm.addColumn("Phone Number");
        
         // Search Code 
        search_text.getDocument().addDocumentListener(new DocumentListener() {    
           private void updateSuggestions() {
              DefaultTableModel ob = (DefaultTableModel) customers_table.getModel();
               TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(ob);
               customers_table.setRowSorter(obj);
               obj.setRowFilter(RowFilter.regexFilter(search_text.getText()));
               obj.setRowFilter(RowFilter.regexFilter("(?i)" + search_text.getText()));
           }

           @Override
           public void insertUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }

           @Override
           public void removeUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }

           @Override
           public void changedUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }
       });
        
        try {

            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/factory", "root", "root");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Connection Failed");
        }
        fillTableModel();

    }

    private void fillTableModel() {
        try {
            dtm.setRowCount(0);

            PreparedStatement stmt = connection.prepareStatement("select customer_id,Firstname,Lastname,Address,phonenumber from customers");

            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                cust_id.add(rs.getInt(1));
                dtm.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});

            }
            customers_table.setModel(dtm);

        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        customers_label = new javax.swing.JLabel();
        customers_icon = new javax.swing.JLabel();
        search_text = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        customers_table = new javax.swing.JTable();
        firstname_label = new javax.swing.JLabel();
        firstname_text = new javax.swing.JTextField();
        lastname_label = new javax.swing.JLabel();
        lastname_text = new javax.swing.JTextField();
        address_label = new javax.swing.JLabel();
        address_text = new javax.swing.JTextField();
        phone_label = new javax.swing.JLabel();
        phone_text = new javax.swing.JTextField();
        delete_button = new javax.swing.JButton();
        update_button = new javax.swing.JButton();
        add_button = new javax.swing.JButton();
        back_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Customers");
        setSize(new java.awt.Dimension(1000, 600));

        jPanel1.setBackground(new java.awt.Color(213, 222, 239));

        customers_label.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 28)); // NOI18N
        customers_label.setForeground(new java.awt.Color(57, 88, 134));
        customers_label.setText("Customers");

        customers_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/icons8-customers-25.png"))); // NOI18N

        search_text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 88, 134), 1, true));
        search_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_textActionPerformed(evt);
            }
        });

        customers_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customers_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customers_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customers_table);
        if (customers_table.getColumnModel().getColumnCount() > 0) {
            customers_table.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        firstname_label.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        firstname_label.setForeground(new java.awt.Color(57, 88, 134));
        firstname_label.setText("First Name");

        firstname_text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 88, 134), 1, true));

        lastname_label.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        lastname_label.setForeground(new java.awt.Color(57, 88, 134));
        lastname_label.setText("Last Name");

        lastname_text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 88, 134), 1, true));

        address_label.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        address_label.setForeground(new java.awt.Color(57, 88, 134));
        address_label.setText("Address");

        address_text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 88, 134), 1, true));
        address_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_textActionPerformed(evt);
            }
        });

        phone_label.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 16)); // NOI18N
        phone_label.setForeground(new java.awt.Color(57, 88, 134));
        phone_label.setText("Phone Number");

        phone_text.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(57, 88, 134), 1, true));

        delete_button.setBackground(new java.awt.Color(57, 88, 134));
        delete_button.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        delete_button.setForeground(new java.awt.Color(213, 222, 239));
        delete_button.setText("Delete");
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });

        update_button.setBackground(new java.awt.Color(57, 88, 134));
        update_button.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        update_button.setForeground(new java.awt.Color(213, 222, 239));
        update_button.setText("Update");
        update_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_buttonActionPerformed(evt);
            }
        });

        add_button.setBackground(new java.awt.Color(57, 88, 134));
        add_button.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        add_button.setForeground(new java.awt.Color(213, 222, 239));
        add_button.setText("Add");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        back_button.setBackground(new java.awt.Color(57, 88, 134));
        back_button.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 12)); // NOI18N
        back_button.setForeground(new java.awt.Color(213, 222, 239));
        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(57, 88, 134));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/search.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(back_button)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(customers_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customers_label, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(330, 330, 330))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phone_label)
                                    .addComponent(add_button))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 13, Short.MAX_VALUE)
                                        .addComponent(phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search_text, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(101, 101, 101))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(address_label)
                                        .addGap(61, 61, 61)
                                        .addComponent(address_text, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(firstname_label)
                                        .addGap(42, 42, 42)
                                        .addComponent(firstname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lastname_text, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lastname_label)
                                        .addGap(260, 260, 260)))))
                        .addGap(45, 45, 45))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(customers_label))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(search_text, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstname_label)
                            .addComponent(firstname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastname_label)
                            .addComponent(lastname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(address_label)
                            .addComponent(address_text, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone_label)
                            .addComponent(phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(customers_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void address_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_address_textActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed

        if (!firstname_text.getText().isEmpty()
                && !lastname_text.getText().isEmpty()
                && !address_text.getText().isEmpty()
                && !phone_text.getText().isEmpty()) {
            try {
                String first_name = firstname_text.getText();
                String last_name = lastname_text.getText();
                String address = address_text.getText();
                String phone_number = phone_text.getText();

                if (!phone_number.matches("\\d{11}")) {
                    JOptionPane.showMessageDialog(this, "Phone number must be 11 digits.");

                    return;
                }

                PreparedStatement stmt = connection.prepareStatement(
                        "INSERT INTO customers (firstname, lastname, address, phonenumber) VALUES (?, ?, ?, ?)"
                );
                stmt.setString(1, first_name);
                stmt.setString(2, last_name);
                stmt.setString(3, address);
                stmt.setString(4, phone_number);
                stmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Added successfully!");
                fillTableModel();
                firstname_text.setText("");
                lastname_text.setText("");
                address_text.setText("");
                phone_text.setText("");

            } catch (SQLException ex) {
                Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "An error occurred while adding the customer. Please try again.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all fields!");
        }


    }//GEN-LAST:event_add_buttonActionPerformed

    private void customers_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customers_tableMouseClicked
        firstname_text.setText(customers_table.getValueAt(customers_table.getSelectedRow(), 1).toString());
        lastname_text.setText(customers_table.getValueAt(customers_table.getSelectedRow(), 2).toString());
        address_text.setText(customers_table.getValueAt(customers_table.getSelectedRow(), 3).toString());
        phone_text.setText(customers_table.getValueAt(customers_table.getSelectedRow(), 4).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_customers_tableMouseClicked

    private void update_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_buttonActionPerformed
        // TODO add your handling code here:

        if (!firstname_text.getText().isEmpty()
                && !lastname_text.getText().isEmpty()
                && !address_text.getText().isEmpty()
                && !phone_text.getText().isEmpty()) {
            try {
                int selectedRow = customers_table.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(this, "Please select a row to update.");
                    return;
                }

                String first_name = firstname_text.getText();
                String last_name = lastname_text.getText();
                String address = address_text.getText();
                String phone_number = phone_text.getText();

                dtm.setValueAt(first_name, selectedRow, 1);
                dtm.setValueAt(last_name, selectedRow, 2);
                dtm.setValueAt(address, selectedRow, 3);
                dtm.setValueAt(phone_number, selectedRow, 4);

                PreparedStatement stmt = connection.prepareStatement(
                        "UPDATE customers SET firstname=?, lastname=?, address=?, phonenumber=? WHERE customer_id=?"
                );
                stmt.setString(1, first_name);
                stmt.setString(2, last_name);
                stmt.setString(3, address);
                stmt.setString(4, phone_number);
                stmt.setInt(5, cust_id.get(selectedRow));
                stmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Updated Successfully!");
                fillTableModel();
                firstname_text.setText("");
                lastname_text.setText("");
                address_text.setText("");
                phone_text.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "An error occurred while updating. Please try again.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all fields before updating.");
        }

    }//GEN-LAST:event_update_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed

        try {

            int selectedRow = customers_table.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Please select a customer to delete.");
                return;
            }

            int confirmation = JOptionPane.showConfirmDialog(
                    this,
                    "Are you sure you want to delete this customer?",
                    "Confirm Deletion",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmation == JOptionPane.YES_OPTION) {

                PreparedStatement stmt = connection.prepareStatement(
                        "DELETE FROM customers WHERE customer_id = ?"
                );
                stmt.setInt(1, cust_id.get(selectedRow));
                stmt.executeUpdate();

                JOptionPane.showMessageDialog(this, "Deleted successfully!");
                firstname_text.setText("");
                lastname_text.setText("");
                address_text.setText("");
                phone_text.setText("");
                fillTableModel();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Customers.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "An error occurred while deleting the customer. Please try again.");
        }


    }//GEN-LAST:event_delete_buttonActionPerformed

    private void search_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_textActionPerformed

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        // TODO add your handling code here:
        new DashBoard(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_back_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customers(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JLabel address_label;
    private javax.swing.JTextField address_text;
    private javax.swing.JButton back_button;
    private javax.swing.JLabel customers_icon;
    private javax.swing.JLabel customers_label;
    private javax.swing.JTable customers_table;
    private javax.swing.JButton delete_button;
    private javax.swing.JLabel firstname_label;
    private javax.swing.JTextField firstname_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastname_label;
    private javax.swing.JTextField lastname_text;
    private javax.swing.JLabel phone_label;
    private javax.swing.JTextField phone_text;
    private javax.swing.JTextField search_text;
    private javax.swing.JButton update_button;
    // End of variables declaration//GEN-END:variables
}
