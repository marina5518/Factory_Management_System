/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Philopateer
 */
public class Products extends javax.swing.JFrame {

    DefaultTableModel d;
    Connection obj;
    int selectedRow;
    String selectedDepartment;
    private static String username=" ";

    /**
     * Creates new form frame_3
     */
    ArrayList<Integer> arrid = new ArrayList<>();

    public Products(String user) {
        username = user;
        initComponents();
        this.setLocationRelativeTo(null);
        d = new DefaultTableModel();
        d.addColumn("ID");
        d.addColumn("Name");
        d.addColumn("Quantity");
        d.addColumn("Cost_price");
        d.addColumn("Selling_price");
        d.addColumn("profit");
        com_box.addItem("Name");
        com_box.addItem("Quantity");
        com_box.addItem("Cost_price");
        com_box.addItem("selling_price");
        com_box.addItem("profit");

         // Search Code 
        txt_search.getDocument().addDocumentListener(new DocumentListener() {    
           private void updateSuggestions() {
              DefaultTableModel ob = (DefaultTableModel) table.getModel();
               TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(ob);
               table.setRowSorter(obj);
               obj.setRowFilter(RowFilter.regexFilter(txt_search.getText()));
               obj.setRowFilter(RowFilter.regexFilter("(?i)" + txt_search.getText()));
           }

           @Override
           public void insertUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }

           @Override
           public void removeUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }

           @Override
           public void changedUpdate(javax.swing.event.DocumentEvent e) {
                updateSuggestions();
           }
       });
        
        
        try {
            obj = DriverManager.getConnection("jdbc:mysql://localhost:3306/factory", "root", "root");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Connection Failed");
        }
        fill_table();
    }

    private void fill_table() {

        try {
            d.setRowCount(0);

            PreparedStatement s = obj.prepareStatement("select product_Id  , Name , Quantity , Cost_price  , selling_price,profit from products");
            ResultSet rs = s.executeQuery();
            while (rs.next()) {

                arrid.add(rs.getInt(1));
                d.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getInt(3), rs.getDouble(4), rs.getDouble(5), rs.getDouble(6)});

            }
            table.setModel(d);

        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txt_search = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_quantity = new javax.swing.JTextField();
        txt_name = new javax.swing.JTextField();
        txt_cost = new javax.swing.JTextField();
        txt_selling = new javax.swing.JTextField();
        add_btn = new javax.swing.JButton();
        update_btn = new javax.swing.JButton();
        delete_btn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        com_box = new javax.swing.JComboBox<>();
        up_btn = new javax.swing.JButton();
        down_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(213, 222, 239));
        jPanel1.setPreferredSize(new java.awt.Dimension(706, 436));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/product.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(57, 88, 134));
        jLabel2.setText("Products");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Quantity", "Cost_Price", "Selling_Price", "Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(120);
        }

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(57, 88, 134));
        jLabel4.setText("Product Name");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(57, 88, 134));
        jLabel5.setText("Quantities");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(57, 88, 134));
        jLabel6.setText("Selling price");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(57, 88, 134));
        jLabel7.setText("Cost price");

        add_btn.setBackground(new java.awt.Color(57, 88, 134));
        add_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add_btn.setForeground(new java.awt.Color(255, 255, 255));
        add_btn.setText("Add");
        add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_btnActionPerformed(evt);
            }
        });

        update_btn.setBackground(new java.awt.Color(57, 88, 134));
        update_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update_btn.setForeground(new java.awt.Color(255, 255, 255));
        update_btn.setText("Update");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });

        delete_btn.setBackground(new java.awt.Color(57, 88, 134));
        delete_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete_btn.setForeground(new java.awt.Color(255, 255, 255));
        delete_btn.setText("Delete");
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(57, 88, 134));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        up_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/icons8-up-arrow-26.png"))); // NOI18N
        up_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                up_btnActionPerformed(evt);
            }
        });

        down_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/icons8-down-arrow-26.png"))); // NOI18N
        down_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                down_btnActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(57, 88, 134));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/icons/search.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_selling, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                .addComponent(txt_quantity)
                                .addComponent(txt_name)
                                .addComponent(txt_cost))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(down_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(up_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(com_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(txt_search))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_selling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(down_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(up_btn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(com_box))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_btn)
                            .addComponent(update_btn)
                            .addComponent(delete_btn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1028, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_btnActionPerformed
        // TODO add your handling code here:

        if (txt_cost.getText().isEmpty() || txt_name.getText().isEmpty() || txt_quantity.getText().isEmpty() || txt_selling.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "PLease,fill all the fields before updating");
        } else {

            try {
                String product_name = txt_name.getText();
                int quantity = Integer.parseInt(txt_quantity.getText());
                double cost = Double.parseDouble(txt_cost.getText());
                double selling = Double.parseDouble(txt_selling.getText());

                PreparedStatement stm = obj.prepareStatement("insert into products (Name, Quantity, Cost_price, selling_price)values (?,?,?,?)");
                stm.setString(1, product_name);
                stm.setInt(2, quantity);
                stm.setDouble(3, cost);
                stm.setDouble(4, selling);

                stm.executeUpdate();

                JOptionPane.showMessageDialog(this, "Added Succefully!");
                fill_table();

            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_add_btnActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed

        if (txt_cost.getText().isEmpty() || txt_name.getText().isEmpty() || txt_quantity.getText().isEmpty() || txt_selling.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "PLease,fill all the fields before updating");
        } else {

            try {
                selectedRow = table.getSelectedRow();
                String product_name = txt_name.getText();
                int quantity = Integer.parseInt(txt_quantity.getText());
                double cost = Double.parseDouble(txt_cost.getText());
                double selling = Double.parseDouble(txt_selling.getText());

                PreparedStatement stm = obj.prepareStatement("update products set Name = ?, Quantity=?, Cost_price=?, selling_price=? where Product_Id=?");
                stm.setString(1, product_name);
                stm.setInt(2, quantity);
                stm.setDouble(3, cost);
                stm.setDouble(4, selling);
                stm.setInt(5, arrid.get(selectedRow));

                stm.executeUpdate();

                JOptionPane.showMessageDialog(this, "updated Succefully");
                fill_table();

            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_update_btnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:

        txt_name.setText(table.getValueAt(table.getSelectedRow(), 1).toString());
        txt_quantity.setText(table.getValueAt(table.getSelectedRow(), 2).toString());
        txt_cost.setText(table.getValueAt(table.getSelectedRow(), 3).toString());
        txt_selling.setText(table.getValueAt(table.getSelectedRow(), 4).toString());

    }//GEN-LAST:event_tableMouseClicked

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed

        try {
            PreparedStatement stm = obj.prepareStatement("delete from products where product_id=? ");

            stm.setInt(1, arrid.get(table.getSelectedRow()));

            stm.executeUpdate();

            JOptionPane.showMessageDialog(this, "Deleted Succefully");
            fill_table();
        } catch (SQLException ex) {
            Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_delete_btnActionPerformed

    private void up_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_up_btnActionPerformed
       selectedDepartment = com_box.getSelectedItem().toString();
        if (selectedDepartment.equals("Name")) {
            try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Name desc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else if (selectedDepartment.equals("Quantity"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Quantity desc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
        else if (selectedDepartment.equals("Cost_price"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Cost_price desc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
         else if (selectedDepartment.equals("selling_price"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by selling_price desc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
         else if (selectedDepartment.equals("profit"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by profit desc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
    }//GEN-LAST:event_up_btnActionPerformed

    private void down_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_down_btnActionPerformed
        selectedDepartment = com_box.getSelectedItem().toString();
        if (selectedDepartment.equals("Name")) {
            try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Name asc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else if (selectedDepartment.equals("Quantity"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Quantity asc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
        else if (selectedDepartment.equals("Cost_price"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by Cost_price asc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
         else if (selectedDepartment.equals("selling_price"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by selling_price asc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        }
         else if (selectedDepartment.equals("profit"))
        {
          try {
                PreparedStatement statement = obj.prepareStatement("SELECT * FROM products order by profit asc");
                ResultSet result = statement.executeQuery();
                d.setRowCount(0);
                while (result.next()) {
                    d.addRow(new Object[]{result.getInt(1),result.getString(2), result.getInt(3), result.getDouble(4), result.getDouble(5), result.getDouble(6)});
                }
            } catch (SQLException ex) {
                Logger.getLogger(Products.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
    }//GEN-LAST:event_down_btnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new DashBoard(username).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_btn;
    private javax.swing.JComboBox<String> com_box;
    private javax.swing.JButton delete_btn;
    private javax.swing.JButton down_btn;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt_cost;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_quantity;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_selling;
    private javax.swing.JButton up_btn;
    private javax.swing.JButton update_btn;
    // End of variables declaration//GEN-END:variables
}
